// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	models "github.com/aofiee/barroth/models"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// ForgorPasswordRepository is an autogenerated mock type for the ForgorPasswordRepository type
type ForgorPasswordRepository struct {
	mock.Mock
}

// CreateForgotPasswordHash provides a mock function with given fields: email, hash, expire
func (_m *ForgorPasswordRepository) CreateForgotPasswordHash(email string, hash string, expire time.Duration) error {
	ret := _m.Called(email, hash, expire)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, time.Duration) error); ok {
		r0 = rf(email, hash, expire)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteHash provides a mock function with given fields: hash
func (_m *ForgorPasswordRepository) DeleteHash(hash string) error {
	ret := _m.Called(hash)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(hash)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetHash provides a mock function with given fields: hash
func (_m *ForgorPasswordRepository) GetHash(hash string) (string, error) {
	ret := _m.Called(hash)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(hash)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(hash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// HashPassword provides a mock function with given fields: user
func (_m *ForgorPasswordRepository) HashPassword(user *models.Users) error {
	ret := _m.Called(user)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Users) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ResetPassword provides a mock function with given fields: m
func (_m *ForgorPasswordRepository) ResetPassword(m *models.Users) error {
	ret := _m.Called(m)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Users) error); ok {
		r0 = rf(m)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
