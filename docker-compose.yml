version: "3.8"
services:
  database:
    image: mysql:5.7
    container_name: database
    ports:
      - 3306:3306
    volumes:
      - "./database/data:/var/lib/mysql"
      - "./database/my.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: diablos
    networks:
      - diablos
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    ports:
      - 8000:80
    environment:
      PMA_PASSWORD: password
      PMA_USER: root
      PMA_HOSTS: database
    networks:
      - diablos
  redis_token:
    image: "redis:latest"
    container_name: redis_token
    hostname: redis_token
    command: ["redis-server", "--include", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6379:6379"
    volumes:
      - "./redis/token:/var/lib/redis"
      - "./redis/conf/token.conf:/usr/local/etc/redis/redis.conf"
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - diablos
  redis_resetpassword:
    image: "redis:latest"
    container_name: redis_resetpassword
    hostname: redis_resetpassword
    command: ["redis-server", "--include", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6380:6379"
    volumes:
      - "./redis/forgotpassword:/var/lib/redis"
      - "./redis/conf/forgotpassword.conf:/usr/local/etc/redis/redis.conf"
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - diablos
  api:
    build:
      context: .
      dockerfile: ./services/go-dev.Dockerfile
    container_name: api
    volumes:
      - "./services:/services"
    working_dir: /services/cmd
    ports:
      - 8181:8181
    links:
      - database
      - redis_token
      - redis_resetpassword
    networks:
      - diablos
    depends_on:
      - database
  backend:
    build:
      context: .
      dockerfile: ./web/react-dev.Dockerfile
    volumes:
      - ./web:/web
    working_dir: /web
    ports:
      - "3000:3000"
networks:
  diablos:
    driver: bridge
